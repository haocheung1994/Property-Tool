<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.job.dao.TuserMapper" >
  <resultMap id="BaseResultMap" type="com.job.model.Tuser" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="userTel" property="usertel" jdbcType="VARCHAR" />
    <result column="userEmail" property="useremail" jdbcType="VARCHAR" />
    <result column="userPwd" property="userpwd" jdbcType="VARCHAR" />
    <result column="userType" property="usertype" jdbcType="VARCHAR" />
    <result column="openId" property="openid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, userTel, userEmail, userPwd, userType, openId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from property_user
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from property_user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.job.model.Tuser" >
    insert into property_user (userId, userTel, userEmail,
    userPwd, userType, openId
    )
    values (#{userid,jdbcType=INTEGER}, #{usertel,jdbcType=VARCHAR}, #{useremail,jdbcType=VARCHAR},
    #{userpwd,jdbcType=VARCHAR}, #{usertype,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.job.model.Tuser" >
    insert into property_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="usertel != null" >
        userTel,
      </if>
      <if test="useremail != null" >
        userEmail,
      </if>
      <if test="userpwd != null" >
        userPwd,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
      <if test="openid != null" >
        openId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="usertel != null" >
        #{usertel,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null" >
        #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="userpwd != null" >
        #{userpwd,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.job.model.Tuser" >
    update property_user
    <set >
      <if test="usertel != null" >
        userTel = #{usertel,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null" >
        userEmail = #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="userpwd != null" >
        userPwd = #{userpwd,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openId = #{openid,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.job.model.Tuser" >
    update property_user
    set userTel = #{usertel,jdbcType=VARCHAR},
    userEmail = #{useremail,jdbcType=VARCHAR},
    userPwd = #{userpwd,jdbcType=VARCHAR},
    userType = #{usertype,jdbcType=VARCHAR},
    openId = #{openid,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>

  <!--htt-->
  <!-- 注册-->
  <insert id="userRegiter" parameterType="com.job.model.Tuser" >
    insert into property_user (userTel,
    userPwd)
    values (#{usertel,jdbcType=VARCHAR},
    #{userpwd,jdbcType=VARCHAR})
  </insert>


  <!--登录验证-->
  <select id="selectSpecifiedUser"  resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from property_user
    where userTel = #{usertel} and userPwd=#{userpwd}
  </select>
  <!--登录用户信息查询-->
  <select id="selectLoginUser"  resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from property_user
    where userTel = #{usertel} and userPwd=#{userpwd}
  </select>


  <update id="updateByUserId">
    update property_user
    set userType = #{usertype}
    where userId = #{userid}
  </update>

  <select id="getUserIdByOpenid" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from property_user
    where openid=#{openid}
  </select>


</mapper>